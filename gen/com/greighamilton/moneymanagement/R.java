/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.greighamilton.moneymanagement;

public final class R {
    public static final class array {
        public static final int colors_array_expenses=0x7f090001;
        public static final int colors_array_income=0x7f090000;
        public static final int edit_options=0x7f090006;
        public static final int expense_array=0x7f090008;
        public static final int incexp_views_0=0x7f090002;
        public static final int incexp_views_1=0x7f090003;
        public static final int incexp_views_2=0x7f090004;
        public static final int incexp_views_3=0x7f090005;
        public static final int income_array=0x7f090007;
        public static final int repetition_array=0x7f090009;
        public static final int repetition_array_2=0x7f09000a;
    }
    public static final class attr {
        /** 
        When set to alignMargins, causes alignment to take place between the outer
        boundary of a view, as defined by its margins. When set to alignBounds,
        causes alignment to take place between the edges of the view.
        The default is alignMargins.
        See {@link android.widget.GridLayout#setAlignmentMode(int)}.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alignBounds</code></td><td>0</td><td>
            Align the bounds of the children.
            See {@link android.widget.GridLayout#ALIGN_BOUNDS}.
            </td></tr>
<tr><td><code>alignMargins</code></td><td>1</td><td>
            Align the margins of the children.
            See {@link android.widget.GridLayout#ALIGN_MARGINS}.
            </td></tr>
</table>
         */
        public static final int alignmentMode=0x7f010004;
        /**  The maximum number of columns to create when automatically positioning children. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int columnCount=0x7f010002;
        /** 
        When set to true, forces column boundaries to appear in the same order
        as column indices.
        The default is true.
        See {@link android.widget.GridLayout#setColumnOrderPreserved(boolean)}.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int columnOrderPreserved=0x7f010006;
        /** 
        The column boundary delimiting the left of the group of cells
        occupied by this view.
        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_column=0x7f010009;
        /** 
        The column span: the difference between the right and left
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}.
        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_columnSpan=0x7f01000a;
        /** 
        Gravity specifies how a component should be placed in its group of cells.
        The default is LEFT | BASELINE.
        See {@link android.widget.GridLayout.LayoutParams#setGravity(int)}.
        
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td>
             Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges.
            </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td>
             Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges.
            </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
         */
        public static final int layout_gravity=0x7f01000b;
        /**  END MarginLayout layoutparams 

        The row boundary delimiting the top of the group of cells
        occupied by this view.
        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_row=0x7f010007;
        /** 
        The row span: the difference between the bottom and top
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}.
        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_rowSpan=0x7f010008;
        /** 
              support versions. All attributes not present in ViewGroup/View are
              redefined in the support library namespace.
        

        The orientation property is not used during layout. It is only used to
        allocate row and column parameters when they are not specified by its children's
        layout parameters. GridLayout works like LinearLayout in this case;
        putting all the components either in a single row or in a single column -
        depending on the value of this flag. In the horizontal case, a columnCount
        property may be additionally supplied to force new rows to be created when a
        row is full. The rowCount attribute may be used similarly in the vertical case.
        The default is horizontal.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
</table>
         */
        public static final int orientation=0x7f010000;
        /**  The maximum number of rows to create when automatically positioning children. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowCount=0x7f010001;
        /** 
        When set to true, forces row boundaries to appear in the same order
        as row indices.
        The default is true.
        See {@link android.widget.GridLayout#setRowOrderPreserved(boolean)}.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowOrderPreserved=0x7f010005;
        /** 
        When set to true, tells GridLayout to use default margins when none are specified
        in a view's layout parameters.
        The default value is false.
        See {@link android.widget.GridLayout#setUseDefaultMargins(boolean)}.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int useDefaultMargins=0x7f010003;
    }
    public static final class color {
        public static final int Blue=0x7f070019;
        public static final int Brown=0x7f07001e;
        public static final int Green=0x7f070018;
        public static final int Orange=0x7f07001c;
        public static final int Pink=0x7f07001b;
        public static final int Purple=0x7f07001d;
        public static final int Red=0x7f070017;
        public static final int Yellow=0x7f07001a;
        public static final int blue1=0x7f070014;
        public static final int blue2=0x7f070015;
        public static final int blue3=0x7f070016;
        public static final int green1=0x7f070000;
        public static final int green2=0x7f070001;
        public static final int green3=0x7f070002;
        public static final int green4=0x7f070003;
        public static final int green5=0x7f070004;
        public static final int green6=0x7f070005;
        public static final int green7=0x7f070006;
        public static final int green8=0x7f070007;
        public static final int grey1=0x7f070010;
        public static final int grey2=0x7f070011;
        public static final int grey3=0x7f070012;
        public static final int grey4=0x7f070013;
        public static final int purple1=0x7f07000e;
        public static final int red1=0x7f070008;
        public static final int red2=0x7f070009;
        public static final int red3=0x7f07000a;
        public static final int red4=0x7f07000b;
        public static final int red5=0x7f07000c;
        public static final int red6=0x7f07000d;
        public static final int white=0x7f07000f;
    }
    public static final class dimen {
        /**  The default gap between components in a layout. 
         */
        public static final int default_gap=0x7f060000;
    }
    public static final class drawable {
        public static final int ic_add_picture=0x7f020000;
        public static final int ic_content_delete=0x7f020001;
        public static final int ic_content_edit=0x7f020002;
        public static final int ic_launcher=0x7f020003;
        public static final int ic_menu_add=0x7f020004;
        public static final int ic_menu_add_expense=0x7f020005;
        public static final int ic_menu_add_income=0x7f020006;
        public static final int ic_menu_cancel=0x7f020007;
        public static final int ic_menu_delete=0x7f020008;
        public static final int ic_menu_edit=0x7f020009;
        public static final int ic_menu_feedback=0x7f02000a;
        public static final int ic_menu_new=0x7f02000b;
        public static final int ic_menu_save=0x7f02000c;
    }
    public static final class id {
        public static final int LinearLayout1=0x7f050072;
        public static final int TextView02=0x7f050052;
        public static final int TextView03=0x7f050053;
        public static final int TextView04=0x7f050054;
        public static final int add_goal_amount_saved=0x7f05002e;
        public static final int add_goal_amount_to_save=0x7f05002d;
        public static final int add_goal_linearlayout_1=0x7f05002b;
        public static final int add_goal_name=0x7f05002c;
        public static final int add_goal_select_image=0x7f05002f;
        public static final int add_to_savings=0x7f05005a;
        public static final int alignBounds=0x7f050002;
        public static final int alignMargins=0x7f050003;
        public static final int bottom=0x7f050005;
        public static final int bottomtext=0x7f05006f;
        public static final int category_colour=0x7f050017;
        public static final int category_colour_box=0x7f050018;
        public static final int category_description=0x7f050019;
        public static final int category_linearlayout_1=0x7f050012;
        public static final int category_menu_cancel=0x7f05007f;
        public static final int category_menu_save=0x7f05007e;
        public static final int category_name=0x7f050013;
        public static final int category_type_expense=0x7f050016;
        public static final int category_type_group=0x7f050014;
        public static final int category_type_income=0x7f050015;
        public static final int center=0x7f05000c;
        public static final int center_horizontal=0x7f05000a;
        public static final int center_vertical=0x7f050008;
        public static final int clip_horizontal=0x7f05000f;
        public static final int clip_vertical=0x7f05000e;
        public static final int colour=0x7f05007a;
        public static final int container=0x7f050056;
        public static final int context_categories_delete=0x7f05009f;
        public static final int context_categories_edit=0x7f05009e;
        public static final int context_incexp_delete=0x7f0500a1;
        public static final int context_incexp_edit=0x7f0500a0;
        public static final int currencySelect=0x7f050062;
        public static final int dashboard=0x7f050041;
        public static final int dashboard_menu_addexpense=0x7f050089;
        public static final int dashboard_menu_addincome=0x7f050088;
        public static final int dashboard_menu_password=0x7f05008a;
        public static final int dashboard_menu_viewgoals=0x7f050086;
        public static final int dashboard_menu_viewhints=0x7f050087;
        public static final int date=0x7f05007d;
        public static final int days=0x7f050077;
        public static final int days_text=0x7f050078;
        public static final int description=0x7f050079;
        public static final int dollar=0x7f050063;
        public static final int end=0x7f050011;
        public static final int euro=0x7f050064;
        public static final int expense_addcategory=0x7f05001f;
        public static final int expense_amount=0x7f05001c;
        public static final int expense_category=0x7f05001e;
        public static final int expense_date=0x7f050020;
        public static final int expense_for=0x7f050027;
        public static final int expense_linearlayout_1=0x7f05001a;
        public static final int expense_linearlayout_2=0x7f05001d;
        public static final int expense_linearlayout_3=0x7f050021;
        public static final int expense_menu_cancel=0x7f050081;
        public static final int expense_menu_save=0x7f050080;
        public static final int expense_name=0x7f05001b;
        public static final int expense_notes=0x7f05002a;
        public static final int expense_oneoff_checkbox=0x7f050022;
        public static final int expense_repetition_1=0x7f050023;
        public static final int expense_repetition_2=0x7f050026;
        public static final int expense_repetition_length=0x7f050028;
        public static final int expense_repetition_period=0x7f050025;
        public static final int expense_repetition_period_text=0x7f050029;
        public static final int expense_repetition_text=0x7f050024;
        public static final int expenses_total=0x7f050055;
        public static final int fill=0x7f05000d;
        public static final int fill_horizontal=0x7f05000b;
        public static final int fill_vertical=0x7f050009;
        public static final int gallery_view=0x7f05004c;
        public static final int goal_image=0x7f050059;
        public static final int goal_menu_cancel=0x7f050083;
        public static final int goal_menu_save=0x7f050082;
        public static final int goal_name=0x7f050058;
        public static final int goal_needed=0x7f05005e;
        public static final int goal_progress_percent=0x7f05005d;
        public static final int goal_saved=0x7f05005f;
        public static final int goal_spinner=0x7f050057;
        public static final int goal_to_save=0x7f050061;
        public static final int grid_of_widgets=0x7f050042;
        public static final int horizontal=0x7f050000;
        public static final int id=0x7f05007c;
        public static final int incexp_all_categories=0x7f050049;
        public static final int incexp_all_dates=0x7f050046;
        public static final int incexp_category=0x7f05004a;
        public static final int incexp_expenses_button=0x7f050045;
        public static final int incexp_income_button=0x7f050044;
        public static final int incexp_linearlayout_1=0x7f050043;
        public static final int incexp_month=0x7f050047;
        public static final int incexp_year=0x7f050048;
        public static final int income_addcategory=0x7f050035;
        public static final int income_amount=0x7f050032;
        public static final int income_category=0x7f050034;
        public static final int income_date=0x7f050036;
        public static final int income_for=0x7f05003d;
        public static final int income_linearlayout_1=0x7f050030;
        public static final int income_linearlayout_2=0x7f050033;
        public static final int income_linearlayout_3=0x7f050037;
        public static final int income_menu_cancel=0x7f050085;
        public static final int income_menu_save=0x7f050084;
        public static final int income_name=0x7f050031;
        public static final int income_notes=0x7f050040;
        public static final int income_oneoff_checkbox=0x7f050038;
        public static final int income_repetition_1=0x7f050039;
        public static final int income_repetition_2=0x7f05003c;
        public static final int income_repetition_length=0x7f05003e;
        public static final int income_repetition_period=0x7f05003b;
        public static final int income_repetition_period_text=0x7f05003f;
        public static final int income_repetition_text=0x7f05003a;
        public static final int income_total=0x7f050050;
        public static final int left=0x7f050006;
        public static final int list_category_box=0x7f050071;
        public static final int list_category_description=0x7f050074;
        public static final int list_category_name=0x7f050073;
        public static final int list_item_category=0x7f050070;
        public static final int list_item_expense=0x7f050075;
        public static final int list_item_income=0x7f050076;
        public static final int passwordText=0x7f050067;
        public static final int pound=0x7f050065;
        public static final int progress=0x7f05005c;
        public static final int remove_from_savings=0x7f05005b;
        public static final int right=0x7f050007;
        public static final int start=0x7f050010;
        public static final int summary_expenses=0x7f050051;
        public static final int summary_income=0x7f05004d;
        public static final int textView3=0x7f050060;
        public static final int textView6=0x7f05004e;
        public static final int textView7=0x7f05004f;
        public static final int top=0x7f050004;
        public static final int toptext=0x7f05006e;
        public static final int type=0x7f05007b;
        public static final int vertical=0x7f050001;
        public static final int viewcategories_menu_addcategory=0x7f05009b;
        public static final int viewcategories_options_dialog=0x7f05006b;
        public static final int viewcategories_options_menu_delete_button=0x7f05006d;
        public static final int viewcategories_options_menu_edit_button=0x7f05006c;
        public static final int viewgoals_menu_addgoal=0x7f05009c;
        public static final int viewgoals_menu_removegoal=0x7f05009d;
        public static final int viewincexp_menu_addexpense=0x7f05008e;
        public static final int viewincexp_menu_addincome=0x7f05008d;
        public static final int viewincexp_menu_categories=0x7f05008f;
        public static final int viewincexp_menu_password=0x7f050090;
        public static final int viewincexp_menu_viewgoals=0x7f05008b;
        public static final int viewincexp_menu_viewhints=0x7f05008c;
        public static final int viewincexp_options_dialog=0x7f050068;
        public static final int viewincexp_options_menu_delete_button=0x7f05006a;
        public static final int viewincexp_options_menu_edit_button=0x7f050069;
        public static final int viewsummary_menu_addexpense=0x7f050097;
        public static final int viewsummary_menu_addincome=0x7f050096;
        public static final int viewsummary_menu_password=0x7f05009a;
        public static final int viewsummary_menu_viewgoals=0x7f050098;
        public static final int viewsummary_menu_viewhints=0x7f050099;
        public static final int viewtrends_menu_addexpense=0x7f050094;
        public static final int viewtrends_menu_addincome=0x7f050093;
        public static final int viewtrends_menu_password=0x7f050095;
        public static final int viewtrends_menu_viewgoals=0x7f050091;
        public static final int viewtrends_menu_viewhints=0x7f050092;
        public static final int year_spinner=0x7f05004b;
        public static final int yen=0x7f050066;
    }
    public static final class layout {
        public static final int activity_addcategory=0x7f030000;
        public static final int activity_addexpense=0x7f030001;
        public static final int activity_addgoal=0x7f030002;
        public static final int activity_addincome=0x7f030003;
        public static final int activity_addnotification=0x7f030004;
        public static final int activity_dashboard=0x7f030005;
        public static final int activity_dashboard_welcome=0x7f030006;
        public static final int activity_incexp_list=0x7f030007;
        public static final int activity_incexp_trends=0x7f030008;
        public static final int activity_incexp_visualiser=0x7f030009;
        public static final int activity_main=0x7f03000a;
        public static final int activity_viewcategories=0x7f03000b;
        public static final int activity_viewgoals=0x7f03000c;
        public static final int activity_viewgoals_welcome=0x7f03000d;
        public static final int activity_viewnotifications=0x7f03000e;
        public static final int dialog_set_currency=0x7f03000f;
        public static final int dialog_set_password=0x7f030010;
        public static final int fragment_incexp_list_options_dialog=0x7f030011;
        public static final int fragment_viewcategories_options_dialog=0x7f030012;
        public static final int list_item=0x7f030013;
        public static final int list_item_category=0x7f030014;
        public static final int list_item_expense=0x7f030015;
        public static final int list_item_income=0x7f030016;
        public static final int simple_list_fragment=0x7f030017;
        public static final int spinner_item_navigator=0x7f030018;
        public static final int widget_countdown=0x7f030019;
    }
    public static final class menu {
        public static final int activity_addcategory=0x7f0b0000;
        public static final int activity_addexpense=0x7f0b0001;
        public static final int activity_addgoal=0x7f0b0002;
        public static final int activity_addincome=0x7f0b0003;
        public static final int activity_dashboard=0x7f0b0004;
        public static final int activity_incexp_list=0x7f0b0005;
        public static final int activity_incexp_trends=0x7f0b0006;
        public static final int activity_incexp_visualiser=0x7f0b0007;
        public static final int activity_viewcategories=0x7f0b0008;
        public static final int activity_viewgoals=0x7f0b0009;
        public static final int context_categories=0x7f0b000a;
        public static final int context_incexp=0x7f0b000b;
    }
    public static final class string {
        public static final int app_name=0x7f080000;
        public static final int edit_options=0x7f08000c;
        public static final int hello_world=0x7f080001;
        public static final int menu_addexpense=0x7f080004;
        public static final int menu_addincome=0x7f080003;
        public static final int menu_settings=0x7f080002;
        public static final int menu_summary=0x7f080008;
        public static final int menu_viewcategories=0x7f080006;
        public static final int menu_viewgoals=0x7f080005;
        public static final int menu_viewincexp=0x7f080007;
        public static final int menu_viewtrends=0x7f080009;
        public static final int pick_color=0x7f08000b;
        public static final int prompt_category=0x7f08000a;
    }
    public static final class style {
        /** 
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        

        Base application theme for API 11+. This theme completely replaces
        AppBaseTheme from res/values/styles.xml on API 11+ devices.
    
 API 11 theme customizations can go here. 

        Base application theme for API 14+. This theme completely replaces
        AppBaseTheme from BOTH res/values/styles.xml and
        res/values-v11/styles.xml on API 14+ devices.
    
 API 14 theme customizations can go here. 
         */
        public static final int AppBaseTheme=0x7f0a0000;
        /**  Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
         */
        public static final int AppTheme=0x7f0a0001;
    }
    public static final class xml {
        public static final int preferences=0x7f040000;
    }
    public static final class styleable {
        /** Attributes that can be used with a GridLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GridLayout_alignmentMode com.greighamilton.moneymanagement:alignmentMode}</code></td><td>
        When set to alignMargins, causes alignment to take place between the outer
        boundary of a view, as defined by its margins.</td></tr>
           <tr><td><code>{@link #GridLayout_columnCount com.greighamilton.moneymanagement:columnCount}</code></td><td> The maximum number of columns to create when automatically positioning children.</td></tr>
           <tr><td><code>{@link #GridLayout_columnOrderPreserved com.greighamilton.moneymanagement:columnOrderPreserved}</code></td><td>
        When set to true, forces column boundaries to appear in the same order
        as column indices.</td></tr>
           <tr><td><code>{@link #GridLayout_orientation com.greighamilton.moneymanagement:orientation}</code></td><td>
              support versions.</td></tr>
           <tr><td><code>{@link #GridLayout_rowCount com.greighamilton.moneymanagement:rowCount}</code></td><td> The maximum number of rows to create when automatically positioning children.</td></tr>
           <tr><td><code>{@link #GridLayout_rowOrderPreserved com.greighamilton.moneymanagement:rowOrderPreserved}</code></td><td>
        When set to true, forces row boundaries to appear in the same order
        as row indices.</td></tr>
           <tr><td><code>{@link #GridLayout_useDefaultMargins com.greighamilton.moneymanagement:useDefaultMargins}</code></td><td>
        When set to true, tells GridLayout to use default margins when none are specified
        in a view's layout parameters.</td></tr>
           </table>
           @see #GridLayout_alignmentMode
           @see #GridLayout_columnCount
           @see #GridLayout_columnOrderPreserved
           @see #GridLayout_orientation
           @see #GridLayout_rowCount
           @see #GridLayout_rowOrderPreserved
           @see #GridLayout_useDefaultMargins
         */
        public static final int[] GridLayout = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010004, 0x7f010005, 0x7f010006
        };
        /**
          <p>
          @attr description
          
        When set to alignMargins, causes alignment to take place between the outer
        boundary of a view, as defined by its margins. When set to alignBounds,
        causes alignment to take place between the edges of the view.
        The default is alignMargins.
        See {@link android.widget.GridLayout#setAlignmentMode(int)}.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alignBounds</code></td><td>0</td><td>
            Align the bounds of the children.
            See {@link android.widget.GridLayout#ALIGN_BOUNDS}.
            </td></tr>
<tr><td><code>alignMargins</code></td><td>1</td><td>
            Align the margins of the children.
            See {@link android.widget.GridLayout#ALIGN_MARGINS}.
            </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:alignmentMode
        */
        public static final int GridLayout_alignmentMode = 4;
        /**
          <p>
          @attr description
           The maximum number of columns to create when automatically positioning children. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:columnCount
        */
        public static final int GridLayout_columnCount = 2;
        /**
          <p>
          @attr description
          
        When set to true, forces column boundaries to appear in the same order
        as column indices.
        The default is true.
        See {@link android.widget.GridLayout#setColumnOrderPreserved(boolean)}.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:columnOrderPreserved
        */
        public static final int GridLayout_columnOrderPreserved = 6;
        /**
          <p>
          @attr description
          
              support versions. All attributes not present in ViewGroup/View are
              redefined in the support library namespace.
        

        The orientation property is not used during layout. It is only used to
        allocate row and column parameters when they are not specified by its children's
        layout parameters. GridLayout works like LinearLayout in this case;
        putting all the components either in a single row or in a single column -
        depending on the value of this flag. In the horizontal case, a columnCount
        property may be additionally supplied to force new rows to be created when a
        row is full. The rowCount attribute may be used similarly in the vertical case.
        The default is horizontal.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:orientation
        */
        public static final int GridLayout_orientation = 0;
        /**
          <p>
          @attr description
           The maximum number of rows to create when automatically positioning children. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:rowCount
        */
        public static final int GridLayout_rowCount = 1;
        /**
          <p>
          @attr description
          
        When set to true, forces row boundaries to appear in the same order
        as row indices.
        The default is true.
        See {@link android.widget.GridLayout#setRowOrderPreserved(boolean)}.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:rowOrderPreserved
        */
        public static final int GridLayout_rowOrderPreserved = 5;
        /**
          <p>
          @attr description
          
        When set to true, tells GridLayout to use default margins when none are specified
        in a view's layout parameters.
        The default value is false.
        See {@link android.widget.GridLayout#setUseDefaultMargins(boolean)}.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:useDefaultMargins
        */
        public static final int GridLayout_useDefaultMargins = 3;
        /** Attributes that can be used with a GridLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_height com.greighamilton.moneymanagement:android_layout_height}</code></td><td></td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_margin com.greighamilton.moneymanagement:android_layout_margin}</code></td><td>
              Specifies extra space on the left, top, right and bottom
              sides of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginBottom com.greighamilton.moneymanagement:android_layout_marginBottom}</code></td><td>
              Specifies extra space on the bottom side of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginLeft com.greighamilton.moneymanagement:android_layout_marginLeft}</code></td><td>
              Specifies extra space on the left side of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginRight com.greighamilton.moneymanagement:android_layout_marginRight}</code></td><td>
              Specifies extra space on the right side of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginTop com.greighamilton.moneymanagement:android_layout_marginTop}</code></td><td>
              Specifies extra space on the top side of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_width com.greighamilton.moneymanagement:android_layout_width}</code></td><td>
              support versions.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_column com.greighamilton.moneymanagement:layout_column}</code></td><td>
        The column boundary delimiting the left of the group of cells
        occupied by this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_columnSpan com.greighamilton.moneymanagement:layout_columnSpan}</code></td><td>
        The column span: the difference between the right and left
        boundaries delimiting the group of cells occupied by this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_gravity com.greighamilton.moneymanagement:layout_gravity}</code></td><td>
        Gravity specifies how a component should be placed in its group of cells.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_row com.greighamilton.moneymanagement:layout_row}</code></td><td> END MarginLayout layoutparams 

        The row boundary delimiting the top of the group of cells
        occupied by this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_rowSpan com.greighamilton.moneymanagement:layout_rowSpan}</code></td><td>
        The row span: the difference between the bottom and top
        boundaries delimiting the group of cells occupied by this view.</td></tr>
           </table>
           @see #GridLayout_Layout_android_layout_height
           @see #GridLayout_Layout_android_layout_margin
           @see #GridLayout_Layout_android_layout_marginBottom
           @see #GridLayout_Layout_android_layout_marginLeft
           @see #GridLayout_Layout_android_layout_marginRight
           @see #GridLayout_Layout_android_layout_marginTop
           @see #GridLayout_Layout_android_layout_width
           @see #GridLayout_Layout_layout_column
           @see #GridLayout_Layout_layout_columnSpan
           @see #GridLayout_Layout_layout_gravity
           @see #GridLayout_Layout_layout_row
           @see #GridLayout_Layout_layout_rowSpan
         */
        public static final int[] GridLayout_Layout = {
            0x010100f4, 0x010100f5, 0x010100f6, 0x010100f7,
            0x010100f8, 0x010100f9, 0x010100fa, 0x7f010007,
            0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b
        };
        /**
          <p>This symbol is the offset where the {@link com.greighamilton.moneymanagement.R.attr#android_layout_height}
          attribute's value can be found in the {@link #GridLayout_Layout} array.
          @attr name android:android_layout_height
        */
        public static final int GridLayout_Layout_android_layout_height = 1;
        /**
          <p>
          @attr description
          
              Specifies extra space on the left, top, right and bottom
              sides of this view. This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute          resource symbol {@link com.greighamilton.moneymanagement.R.attr#android_layout_margin}.
          @attr name android:android_layout_margin
        */
        public static final int GridLayout_Layout_android_layout_margin = 2;
        /**
          <p>
          @attr description
          
              Specifies extra space on the bottom side of this view.
              This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute          resource symbol {@link com.greighamilton.moneymanagement.R.attr#android_layout_marginBottom}.
          @attr name android:android_layout_marginBottom
        */
        public static final int GridLayout_Layout_android_layout_marginBottom = 6;
        /**
          <p>
          @attr description
          
              Specifies extra space on the left side of this view.
              This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute          resource symbol {@link com.greighamilton.moneymanagement.R.attr#android_layout_marginLeft}.
          @attr name android:android_layout_marginLeft
        */
        public static final int GridLayout_Layout_android_layout_marginLeft = 3;
        /**
          <p>
          @attr description
          
              Specifies extra space on the right side of this view.
              This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute          resource symbol {@link com.greighamilton.moneymanagement.R.attr#android_layout_marginRight}.
          @attr name android:android_layout_marginRight
        */
        public static final int GridLayout_Layout_android_layout_marginRight = 5;
        /**
          <p>
          @attr description
          
              Specifies extra space on the top side of this view.
              This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute          resource symbol {@link com.greighamilton.moneymanagement.R.attr#android_layout_marginTop}.
          @attr name android:android_layout_marginTop
        */
        public static final int GridLayout_Layout_android_layout_marginTop = 4;
        /**
          <p>
          @attr description
          
              support versions. All attributes not present in MarginLayout are
              redefined in the support library name space.
        
 START MarginLayout layoutparams 
          <p>This corresponds to the global attribute          resource symbol {@link com.greighamilton.moneymanagement.R.attr#android_layout_width}.
          @attr name android:android_layout_width
        */
        public static final int GridLayout_Layout_android_layout_width = 0;
        /**
          <p>
          @attr description
          
        The column boundary delimiting the left of the group of cells
        occupied by this view.
        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:layout_column
        */
        public static final int GridLayout_Layout_layout_column = 9;
        /**
          <p>
          @attr description
          
        The column span: the difference between the right and left
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}.
        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:layout_columnSpan
        */
        public static final int GridLayout_Layout_layout_columnSpan = 10;
        /**
          <p>
          @attr description
          
        Gravity specifies how a component should be placed in its group of cells.
        The default is LEFT | BASELINE.
        See {@link android.widget.GridLayout.LayoutParams#setGravity(int)}.
        


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td>
             Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges.
            </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td>
             Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges.
            </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:layout_gravity
        */
        public static final int GridLayout_Layout_layout_gravity = 11;
        /**
          <p>
          @attr description
           END MarginLayout layoutparams 

        The row boundary delimiting the top of the group of cells
        occupied by this view.
        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:layout_row
        */
        public static final int GridLayout_Layout_layout_row = 7;
        /**
          <p>
          @attr description
          
        The row span: the difference between the bottom and top
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}.
        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:layout_rowSpan
        */
        public static final int GridLayout_Layout_layout_rowSpan = 8;
    };
}
